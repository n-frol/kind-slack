/**
 * Service class for method credit direct (3d)
 */
/* Api includes */
var omsLogger = require('dw/system/Logger').getLogger('SalesforceOMS', 'service');

/* Script includes */
var AbstractOmsService = require( "./abstractOmsService" );

var OMSAuthService = AbstractOmsService.extend({
    init : function() {
        this._super();
        this.relativeURLPath = 'services/oauth2/token';
        // request header
        this.requestHeaders = {
            'Content-type': 'application/x-www-form-urlencoded'
        };
    },
    /**
     * Implements the function that should be used to prepare the service call request objects
     *
     * @param {dw.svc.HTTPService}    svc       The service itself
     * @param {dw.util.Map}           params    Map of key value pairs that have to be added as parameters to the call
     *
     * @return String The JSON string that has to be sent to the service
     */
    createRequest : function( svc,params ) {

        //sets the service call endpoint
        if ( !empty(this.relativeURLPath) ) {
            svc.URL = [ svc.URL, this.relativeURLPath ].join('/');
        }

        //adding header values
        if ( !empty(this.requestHeaders) ) {
            for ( var headerID : String in this.requestHeaders ) {
                svc.addHeader(headerID, this.requestHeaders[headerID]);
            }
        }

        //setting request encoding
        if ( !empty(this.encoding) && this.encoding != "UTF-8") {
            svc.setEncoding(this.encoding);
        }

        //setting the authentication mechanism which is default NONE
        svc.setRequestMethod('NONE');

        //setting request method
        svc.setRequestMethod('POST');

        //create requestData as string
        var requestData : String = '';

        svc.addParam('grant_type', "password");
        svc.addParam('client_id', this.getSitePreference("oms.client.id"));
        svc.addParam('client_secret', this.getSitePreference("oms.client.secret"));
        svc.addParam('username', this.getSitePreference("oms.username"));
        svc.addParam('password', this.getSitePreference("oms.password"));

        //setting the out file if defined
        if ( !empty(this.outfile) ) {
            svc.setOutFile(this.outfile);
        }

        return requestData;
    }
});
//Export the configured service singleton
module.exports = (new OMSAuthService()).getService();
