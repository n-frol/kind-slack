<isscript>
    pdict.templateClass = (typeof pdict.templateClass === 'undefined' ? '' : pdict.templateClass);  // Make sure template class is defined, since empty() doesn't check for it
    var theprod = dw.catalog.ProductMgr.getProduct(product.id);
</isscript>

<div class="primary-images c-product-primary-images c-product-primary-images--${product.category.id} st-product-top__section<isif condition="${!empty(pdict.templateClass)}"> ${pdict.templateClass}__section ${pdict.templateClass}__section--images ${pdict.templateClass}__section--images--${product.category.id}</isif> show-thumbnails js-append-thumbnails">
    <div id="pdpCarousel-${product.id}" class="c-product-primary-images__carousel carousel s-slick s-slick--${product.category.id} slide" data-interval="0">

        <div class="savehotspots" style="display:none;" data-url='${URLUtils.url("Product-SaveHotspots")}'></div>

        <div data-hotspots="${theprod.custom.image_hotspots}" class="carousel-inner prodcara js-slider" role="listbox" <isinclude template="product/components/slickSliderData" sf-toolkit="off">
            data-variable-color="true">
            <isif condition="${!empty(product.responsiveImages)}">
                <isloop items="${product.responsiveImages}" var="image" status="loopStatus">
                    <div data-index="${loopStatus.index}" class='caro_${loopStatus.index} carousel-item <isif condition="${loopStatus.index == 0}">active</isif>' data-thumbnailsrc="${image.small.imageUrlDefault}" data-altText="${image.small.imageAlt}">
                        <img src="${image.normal.imageUrlDefault}" class="d-block c-product-primary-images__carousel__img js-product-primary-images__carousel__img ${product.indexLifestyleImage && product.indexLifestyleImage.toFixed() == loopStatus.index ? 'big' : 'img-fluid'}" alt="${image.normal.imageAlt}" itemprop="image"
                            sizes="(min-width: 800px) 425w, 750px"
                            srcset="${image.small.imageUrlDefault + ' 425w, ' + image.normal.imageUrlDefault + ' 750w'}" />
                    </div>
                </isloop>
            </isif>
        </div>

        <div class="c-product-primary-images__carousel__controls c-product-primary-images__carousel__controls--arrows-inline c-product-primary-images__carousel__controls--variable-color js-slider__controls js-slider__controls--arrows-inline">
            <iscomment>Hide arrows here so jQuery can get them.  Allows for generating buttons using SFRA functions that imageCarousel.js won't have access to</iscomment>
            <button class="carousel-control-prev c-product-primary-images__carousel__controls__prev c-product-primary-images__carousel__controls__prev--variable-color js-slider__controls__prev slick-prev d-none" type="button" data-slide="prev">
                <span class="sr-only">${Resource.msg('button.previous', 'common', null)}</span>
            </button>

            <button class="carousel-control-next c-product-primary-images__carousel__controls__next c-product-primary-images__carousel__controls__next--variable-color js-slider__controls__next slick-next d-none" type="button" data-slide="next">
                <span class="sr-only">${Resource.msg('button.next', 'common', null)}</span>
            </button>

        </div>
    </div>
</div>

<style>
    button.HotspotPlugin_Save, button.HotspotPlugin_Remove, button.HotspotPlugin_Send {
        bottom: -5px !important;
        display:block !important;
        width: unset !important;
    }
    button.HotspotPlugin_Remove {
        left: 100px !important;
    }
</style>

<script>

</script>

<style>
    .hsoverlay {
        position: absolute;
        background-color: rgba(0, 0, 0, 0.4);
    }
    /*
* Hotspot
*
*/
    .HotspotPlugin_Hotspot {
        height: 20px;
        width: 20px;
        position: absolute;
        background: white;
        border-radius: 50%;
        cursor: pointer;
        z-index: 200;
        margin-left: -10px;
        margin-top: -10px;
    }

    /*
    * Hotspot content
    *
    */
    .HotspotPlugin_Hotspot > div {
        background: rgba(0, 0, 0, 0.5);
        width: 200px;
        height: 94px;
        margin: -94px -60px;
        border-radius: 4px;
        overflow: hidden;
        font-size: 10px;
        display:none; /* Required */
        color: white;
    }
    .HotspotPlugin_Hotspot:hover > div {
        display: block; /* Required */
    }
    .HotspotPlugin_Hotspot > div > .Hotspot_Title, .HotspotPlugin_Hotspot > div > .Hotspot_header {
        background: rgba(255, 255, 255, 0.4);
        height: 20px;
        font-weight: bold;
        padding: 10px;
        font-size: 16px;
    }
    .HotspotPlugin_Hotspot > div > .Hotspot_Message, .HotspotPlugin_Hotspot > div > .Hotspot_body {
        background: rgba(255, 255, 255, 0.4);
        margin-top: 2px;
        padding: 10px;
        height: 72px;
        overflow-y: auto;
        font-size: 12px;
    }
    .HotspotPlugin_Hotspot_Hidden {
        display: none!important;
        visibility: hidden!important;
    }

    /*
    * Hotspots immediately after creation - admin-mode
    *
    */
    .HotspotPlugin_Hotspot_Unsaved {
        background: #4E6FF3;
    }

    /*
    * Overlay used in the admin-mode
    *
    */
    span.HotspotPlugin_Overlay {
        position: absolute;
        background-color: rgba(0, 0, 0, 0.4);
        top: 0px;
        left: 0px;
        cursor: pointer;
    }
    span.HotspotPlugin_Overlay > p {
        color: #ffffff;
        background: rgba(255, 255, 255, 0.4);
        margin-top: 0px;
        padding: 20px;
        text-align: center;
    }

    /*
    * Action buttons - `admin` mode
    *
    */
    button.HotspotPlugin_Save,
    button.HotspotPlugin_Remove,
    button.HotspotPlugin_Send {
        position: absolute;
        bottom: -35px;
        color: #fff;
        display: inline-block;
        padding: 4px 6px;
        font-size: 14px;
        text-align: center;
        border-radius: 4px;
    }

    button.HotspotPlugin_Save {
        left: 0px;
        background-color: #5cb85c;
    }
    button.HotspotPlugin_Remove {
        left: 80px;
        background-color: #d9534f;
    }
    button.HotspotPlugin_Send {
        left: 180px;
        background-color: #5bc0de;
    }

</style>
